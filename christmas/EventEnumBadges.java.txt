CompilationUnit
│   PackageDeclaration(name=christmas)
└── EnumDeclaration(annotations=[], body=EnumBody(constants=[EnumConstantDeclaration(annotations=[], arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="산타"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=20000)], body=None, documentation=None, modifiers=None, name=SANTA), EnumConstantDeclaration(annotations=[], arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="트리"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10000)], body=None, documentation=None, modifiers=None, name=TREE), EnumConstantDeclaration(annotations=[], arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="별"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], body=None, documentation=None, modifiers=None, name=STAR)], declarations=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=NAME)], documentation=None, modifiers={'private', 'final'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=PRICE)], documentation=None, modifiers={'private', 'final'}, type=BasicType(dimensions=[], name=int)), ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=NAME, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=PRICE, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=PRICE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers=set(), name=EventEnumBadges, parameters=[FormalParameter(annotations=[], modifiers=set(), name=NAME, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=PRICE, type=BasicType(dimensions=[], name=int), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MemberReference(member=NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=getName, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MemberReference(member=PRICE, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=getPrice, parameters=[], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ForStatement(body=BlockStatement(label=None, statements=[IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getPrice, postfix_operators=[], prefix_operators=[], qualifier=eventEnumBadge, selectors=[], type_arguments=None), operandr=MemberReference(member=discounts, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[], member=getName, postfix_operators=[], prefix_operators=[], qualifier=eventEnumBadge, selectors=[], type_arguments=None), label=None)]))]), control=EnhancedForControl(iterable=MethodInvocation(arguments=[], member=values, postfix_operators=[], prefix_operators=[], qualifier=EventEnumBadges, selectors=[], type_arguments=None), var=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=None, name=eventEnumBadge)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=EventEnumBadges, sub_type=None))), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="없음"), label=None)], documentation=None, modifiers={'public', 'static'}, name=whichBadge, parameters=[FormalParameter(annotations=[], modifiers=set(), name=discounts, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None)]), documentation=None, implements=None, modifiers={'public'}, name=EventEnumBadges)
